version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  codestyle:
    docker:
      - image: ubuntu:bionic
    environment:
      LANG: C.UTF-8
    steps:
      - run: apt update
      - run: apt install -y python3-pip
      - checkout
      - run: pip3 install flake8
      - run: flake8 --exclude "" --ignore=E501,F821 geotrek/settings
      - run: flake8 geotrek
      - run: test $(ls geotrek/*/migrations/*.py | xargs grep -l srid | xargs grep -L SRID | wc -l) -eq 0
  build:
    machine: true
    steps:
      - checkout
      - run: make build
      - run: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_LOGIN" --password-stdin
      - run: docker tag geotrek:latest geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID
      - run: docker push geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID
  test:
    machine: true
    environment:
      LANG: C.UTF-8
    steps:
      - checkout
      - run: cp .env-prod.dist .env; cp docker-compose-prod.yml docker-compose.yml
      - run: docker run -p 5432:5432 --env-file .env -d makinacorpus/postgis:11-2.5
      - run: docker pull geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID
      - run: docker tag geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID geotrekce/admin:latest
      - run: docker-compose run web update.sh
      - run: docker-compose run -e ENV=tests -e COVERAGE_FILE=var/.coverage web coverage run ./manage.py test geotrek
      - run: docker-compose run -e COVERAGE_FILE=var/.coverage web coverage xml -o var/coverage.xml
      - codecov/upload:
          file: var/coverage.xml
          flags: test
          when: on_success
  test_nds:
    machine: true
    environment:
      LANG: C.UTF-8
    steps:
      - checkout
      - run: cp .env-prod.dist .env; cp docker-compose-prod.yml docker-compose.yml
      - run: docker run -p 5432:5432 --env-file .env -d makinacorpus/postgis:11-2.5
      - run: docker pull geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID
      - run: docker tag geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID geotrekce/admin:latest
      - run: docker-compose run web update.sh
      - run: docker-compose run -e ENV=tests_nds -e COVERAGE_FILE=var/.coverage web coverage run ./manage.py test geotrek
      - run: docker-compose run -e COVERAGE_FILE=var/.coverage web coverage xml -o var/coverage.xml
      - codecov/upload:
          file: var/coverage.xml
          flags: test_nds
          when: on_success
  test_js:
    docker:
      - image: geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID
    environment:
      LANG: C.UTF-8
      ENV: tests
      SECRET_KEY: foo
      CUSTOM_SETTINGS_FILE: ""
    working_directory: /app/src
    steps:
      - run: apt-get update && apt-get install -y npm
      - run: mkdir -p var/conf/extra_static
      - run: ./env/bin/python manage.py collectstatic --noinput
      - run: npm install geotrek/jstests
      - run: ./node_modules/.bin/mocha-phantomjs geotrek/jstests/index.html
  deploy:
    machine: true
    environment:
      LANG: C.UTF-8
    steps:
      - checkout
      # Check this is a release and not a development version
      - run: grep '^[0-9]\+\.[0-9]\+\.[0-9]$' VERSION || circleci-agent step halt
      - run: docker pull geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID
      - run: docker tag geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID geotrekce/admin:$(cat VERSION)
      - run: docker tag geotrekce/circleci-admin:$CIRCLE_WORKFLOW_ID geotrekce/admin:latest
      - run: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_LOGIN" --password-stdin
      - run: docker push geotrekce/admin:$(cat VERSION)
      - run: docker push geotrekce/admin:latest
  local:
    docker:
      - image: ubuntu:bionic
    environment:
      LANG: C.UTF-8
      ENV: tests
    steps:
      - run: apt update
      - run: DEBIAN_FRONTEND="noninteractive" apt install -y curl git sudo tzdata
      - checkout
      - run: ./install.sh --noinput
      - run: sudo -u postgres psql -c "ALTER USER geotrek SUPERUSER;"
      - run: sed -i "s/bind .*/bind 127.0.0.1/g" /etc/redis/redis.conf; service redis-server start
      - run: ./manage.py test -v2 geotrek
workflows:
  version: 2
  all:
    jobs:
      - codestyle
      - build
      - test:
          requires:
            - build
      - test_nds:
          requires:
            - build
      - test_js:
          requires:
            - build
      - deploy:
          requires:
            - codestyle
            - test
            - test_nds
            - test_js
          filters:
            branches:
              only:
                - docker-integration
      - local
